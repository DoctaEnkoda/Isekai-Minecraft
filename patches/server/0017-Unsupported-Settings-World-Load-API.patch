From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bierque Jason <bierquejason@gmail.com>
Date: Sat, 12 Aug 2023 17:11:16 +0200
Subject: [PATCH] Unsupported Settings : World Load API


diff --git a/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java b/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
index 52a0928bf3341bf37bf335d34007a6eb045315d8..2d7e40fd2addf0ffa353f7710d692b4f56c79bbb 100644
--- a/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
+++ b/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
@@ -160,8 +160,10 @@ public class TenseiConfig {
         }
     }
 
+    public static boolean createWorldDisabled = true;
     public static boolean useVanillaEndTeleportation = false;
     private static void unsupportedSettings() {
         useVanillaEndTeleportation = getBoolean("settings.unsupported.pr-folia.vanilla-end-teleportation", useVanillaEndTeleportation);
+        createWorldDisabled = getBoolean("settings.unsupported.create-world-api-disabled", createWorldDisabled);
     }
 }
diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 87835b23e8e58b310da972c76dd620ac5908903e..d6e1e399008cdb8d0337d484012731bfc779fb5b 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -744,6 +744,8 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             int i1 = -1;
             boolean flag2 = true;
 
+            // TenseiMC start - TODO rewrite
+            /*
             for (int j1 = 0; j1 < Mth.square(11); ++j1) {
                 if (j >= -5 && j <= 5 && k >= -5 && k <= 5) {
                     BlockPos blockposition1 = PlayerRespawnLogic.getSpawnPosInChunk(world, new ChunkPos(chunkcoordintpair.x + j, chunkcoordintpair.z + k));
@@ -764,7 +766,8 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
                 j += l;
                 k += i1;
             }
-
+            */
+            // TenseiMC end - TODO rewrite
             if (bonusChest) {
                 world.registryAccess().registry(Registries.CONFIGURED_FEATURE).flatMap((iregistry) -> {
                     return iregistry.getHolder(MiscOverworldFeatures.BONUS_CHEST);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ba73eac33bcfba0f3534f6d2119a3f77ccbb924a..368a2055061b215af92d932b7acf3f42832ed5fd 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1298,7 +1298,7 @@ public final class CraftServer implements Server {
 
     @Override
     public World createWorld(WorldCreator creator) {
-        if (true) throw new UnsupportedOperationException(); // Folia - not implemented properly yet
+        if (fr.euphilia.tenseimc.TenseiConfig.createWorldDisabled) throw new UnsupportedOperationException(); // Folia - not implemented properly yet // TenseiMC
         Preconditions.checkState(this.console.getAllLevels().iterator().hasNext(), "Cannot create additional worlds on STARTUP");
         //Preconditions.checkState(!this.console.isIteratingOverLevels, "Cannot create a world while worlds are being ticked"); // Paper - Cat - Temp disable. We'll see how this goes.
         Preconditions.checkArgument(creator != null, "WorldCreator cannot be null");
@@ -1419,6 +1419,11 @@ public final class CraftServer implements Server {
         if (!(this.worlds.containsKey(name.toLowerCase(java.util.Locale.ENGLISH)))) {
             return null;
         }
+        // TenseiMC start
+        if (internal.randomSpawnSelection == null) {
+            internal.randomSpawnSelection = new net.minecraft.world.level.ChunkPos(internal.getChunkSource().randomState().sampler().findSpawnPosition());
+        }
+        // TenseiMC end
 
         this.console.addLevel(internal); // Paper - move up
         this.console.initWorld(internal, worlddata, worlddata, worlddata.worldGenOptions());
@@ -1428,6 +1433,7 @@ public final class CraftServer implements Server {
 
         internal.keepSpawnInMemory = creator.keepSpawnLoaded().toBooleanOrElse(internal.getWorld().getKeepSpawnInMemory()); // Paper
         this.getServer().prepareLevels(internal.getChunkSource().chunkMap.progressListener, internal);
+        io.papermc.paper.threadedregions.RegionizedServer.getInstance().addWorld(internal); // TenseiMC
         //internal.entityManager.tick(); // SPIGOT-6526: Load pending entities so they are available to the API // Paper - rewrite chunk system
 
         this.pluginManager.callEvent(new WorldLoadEvent(internal.getWorld()));
