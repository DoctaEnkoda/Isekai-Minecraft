From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bierque Jason <bierquejason@gmail.com>
Date: Sun, 4 Jun 2023 00:17:02 +0200
Subject: [PATCH] Compostable items configuration.


diff --git a/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java b/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
index 087601a4000db1325057d0de013d36d1c9430adf..fc2c3a86406e9a645e50d6f02a0ea553e05f354f 100644
--- a/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
+++ b/src/main/java/fr/euphilia/tenseimc/TenseiConfig.java
@@ -2,6 +2,9 @@ package fr.euphilia.tenseimc;
 
 import com.google.common.base.Throwables;
 import com.google.common.collect.ImmutableMap;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.item.Item;
 import org.bukkit.Bukkit;
 import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.configuration.InvalidConfigurationException;
@@ -13,8 +16,7 @@ import java.io.IOException;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 import java.util.logging.Level;
 
 public class TenseiConfig {
@@ -125,6 +127,7 @@ public class TenseiConfig {
     public static boolean enderChestSixRows = false;
     public static boolean enderChestPermissionRows = false;
     public static int barrelRows = 3;
+    public static HashMap<Item, Double> itemCompostable = new HashMap<>();
     private static void blockSettings() {
         enderChestSixRows = getBoolean("settings.blocks.ender_chest.six-rows", enderChestPermissionRows);
         org.bukkit.event.inventory.InventoryType.ENDER_CHEST.setDefaultSize(enderChestSixRows ? 54 : 27);
@@ -135,5 +138,15 @@ public class TenseiConfig {
             barrelRows = 3;
         }
         org.bukkit.event.inventory.InventoryType.BARREL.setDefaultSize(barrelRows*9);
+        itemCompostable.clear();
+        getMap("settings.blocks.composter.compostable", net.minecraft.world.level.block.ComposterBlock.composterBlockItem()).forEach((item, value) -> {
+            try {
+                Item items = BuiltInRegistries.ITEM.get(new ResourceLocation(item.toLowerCase()));
+                itemCompostable.put(items, (Double) value);
+            } catch (Exception exception) {
+                log(Level.SEVERE, "Invalid id " + item);
+            }
+        });
+        net.minecraft.world.level.block.ComposterBlock.loadComposterBlock();
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/ComposterBlock.java b/src/main/java/net/minecraft/world/level/block/ComposterBlock.java
index 10d3912ef043eefdf89105332e29b0d2bf4a5539..ef78a3cabff12fe14d10b41cb909308da2444175 100644
--- a/src/main/java/net/minecraft/world/level/block/ComposterBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/ComposterBlock.java
@@ -172,6 +172,21 @@ public class ComposterBlock extends Block implements WorldlyContainerHolder {
         ComposterBlock.add(1.0F, Items.PUMPKIN_PIE);
     }
 
+    // TenseiMC start
+    public static java.util.Map<String, Double> composterBlockItem() {
+        java.util.Map<String, Double> compostBlockMap = new java.util.HashMap<>();
+        ComposterBlock.COMPOSTABLES.forEach((itemLike, aFloat) -> compostBlockMap.put(itemLike.asItem().toString(), aFloat.doubleValue()));
+        return compostBlockMap;
+    }
+
+    public static void loadComposterBlock() {
+        ComposterBlock.COMPOSTABLES.clear();
+        ComposterBlock.COMPOSTABLES.defaultReturnValue(-1.0F);
+        fr.euphilia.tenseimc.TenseiConfig.itemCompostable.forEach((item, aDouble) -> {
+            ComposterBlock.add(aDouble.floatValue(), item);
+        });
+    }
+    // TenseiMC end
     private static void add(float levelIncreaseChance, ItemLike item) {
         ComposterBlock.COMPOSTABLES.put(item.asItem(), levelIncreaseChance);
     }
