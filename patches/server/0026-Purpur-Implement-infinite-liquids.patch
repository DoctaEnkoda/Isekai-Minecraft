From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Wed, 2 Aug 2023 13:06:07 +0200
Subject: [PATCH] Purpur - Implement infinite liquids


diff --git a/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java b/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
index c06843f9e7ec247b27d6b826a21cbbb16e57333b..4ebf12ce135c9210fbd1bb48ba98e1c0a3f40e9a 100644
--- a/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
+++ b/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
@@ -132,4 +132,11 @@ public class TenseiWorldConfig {
         humanHungerExhaustionAmount = (float) getDouble("gameplay-mechanics.mob-effects.hunger-exhaustion-amount", humanHungerExhaustionAmount);
         humanSaturationRegenAmount = (float) getDouble("gameplay-mechanics.mob-effects.saturation-regen-amount", humanSaturationRegenAmount);
     }
+
+    public int lavaInfiniteRequiredSources = 2;
+    public int waterInfiniteRequiredSources = 2;
+    private void liquidsSettings() {
+        lavaInfiniteRequiredSources = getInt("blocks.lava.infinite-required-sources", lavaInfiniteRequiredSources);
+        waterInfiniteRequiredSources = getInt("blocks.water.infinite-required-sources", waterInfiniteRequiredSources);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/level/material/FlowingFluid.java b/src/main/java/net/minecraft/world/level/material/FlowingFluid.java
index e21f4c5aff3a8e97101f6efc1349fbecf326b5ea..2059c7e22440ef90e2798d89d3855c66852fff06 100644
--- a/src/main/java/net/minecraft/world/level/material/FlowingFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/FlowingFluid.java
@@ -218,7 +218,7 @@ public abstract class FlowingFluid extends Fluid {
             }
         }
 
-        if (this.canConvertToSource(world) && j >= 2) {
+        if (this.canConvertToSource(world) && j >= getRequiredSources(world)) { // TenseiMC
             BlockState iblockdata2 = world.getBlockState(pos.below());
             FluidState fluid1 = iblockdata2.getFluidState();
 
@@ -302,6 +302,12 @@ public abstract class FlowingFluid extends Fluid {
 
     protected abstract boolean canConvertToSource(Level world);
 
+    // TenseiMC start
+    protected int getRequiredSources(Level world) {
+        return 2;
+    }
+    // TenseiMC end
+
     protected void spreadTo(LevelAccessor world, BlockPos pos, BlockState state, Direction direction, FluidState fluidState) {
         if (state.getBlock() instanceof LiquidBlockContainer) {
             ((LiquidBlockContainer) state.getBlock()).placeLiquid(world, pos, state, fluidState);
diff --git a/src/main/java/net/minecraft/world/level/material/LavaFluid.java b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
index c3f8e1e2dd89c168b8b4a15b589109db486bc8d7..a9f407eeb2e2bcb26e53418d5d878944bce04780 100644
--- a/src/main/java/net/minecraft/world/level/material/LavaFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/LavaFluid.java
@@ -198,6 +198,13 @@ public abstract class LavaFluid extends FlowingFluid {
         world.levelEvent(1501, pos, 0);
     }
 
+    // TenseiMC start
+    @Override
+    protected int getRequiredSources(Level world) {
+        return world.tenseiWorldConfig.lavaInfiniteRequiredSources;
+    }
+    // TenseiMC end
+
     @Override
     protected boolean canConvertToSource(Level world) {
         return world.getGameRules().getBoolean(GameRules.RULE_LAVA_SOURCE_CONVERSION);
diff --git a/src/main/java/net/minecraft/world/level/material/WaterFluid.java b/src/main/java/net/minecraft/world/level/material/WaterFluid.java
index d280c98aed5262c4ce39526c917de884f25a8584..4cad1459f205d9e2cf7d56c6ae4ec0726890d5f0 100644
--- a/src/main/java/net/minecraft/world/level/material/WaterFluid.java
+++ b/src/main/java/net/minecraft/world/level/material/WaterFluid.java
@@ -64,6 +64,13 @@ public abstract class WaterFluid extends FlowingFluid {
         return world.getGameRules().getBoolean(GameRules.RULE_WATER_SOURCE_CONVERSION);
     }
 
+    // TenseiMC start
+    @Override
+    protected int getRequiredSources(Level world) {
+        return world.tenseiWorldConfig.waterInfiniteRequiredSources;
+    }
+    // TenseiMC end
+
     // Paper start
     @Override
     protected void beforeDestroyingBlock(LevelAccessor world, BlockPos pos, BlockState state,  BlockPos source) {
