From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Bierque Jason <bierquejason@gmail.com>
Date: Sun, 4 Jun 2023 10:52:28 +0200
Subject: [PATCH] Beacon Activation Range Configurable


diff --git a/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java b/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
index 88a753fcf568e4628ac5470782f35504e2e1b6e0..c6de83a7f275d218c61925531ae825b4e1a98202 100644
--- a/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
+++ b/src/main/java/fr/euphilia/tenseimc/TenseiWorldConfig.java
@@ -70,4 +70,15 @@ public class TenseiWorldConfig {
         disableObserverClocks = getBoolean("blocks.observer.disable-clock", disableObserverClocks);
         pistonBlockPushLimit = getInt("blocks.piston.block-push-limit", pistonBlockPushLimit);
     }
+
+    public int beaconLevelOne = 20;
+    public int beaconLevelTwo = 30;
+    public int beaconLevelThree = 40;
+    public int beaconLevelFour = 50;
+    private void beaconSettings() {
+        beaconLevelOne = getInt("blocks.beacon.effect-range.level-1", beaconLevelOne);
+        beaconLevelTwo = getInt("blocks.beacon.effect-range.level-2", beaconLevelTwo);
+        beaconLevelThree = getInt("blocks.beacon.effect-range.level-3", beaconLevelThree);
+        beaconLevelFour = getInt("blocks.beacon.effect-range.level-4", beaconLevelFour);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/BeaconBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
index dfd3432d648c9dafcb45b4f6a00d58cb308625b3..663299a462f4eb6897d12d9d605f4b4fc1359013 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/BeaconBlockEntity.java
@@ -84,6 +84,17 @@ public class BeaconBlockEntity extends BlockEntity implements MenuProvider, Name
 
     public double getEffectRange() {
         if (this.effectRange < 0) {
+            // TenseiMC start
+            if (this.level != null) {
+                return switch (this.levels) {
+                    case 1 -> this.level.tenseiWorldConfig.beaconLevelOne;
+                    case 2 -> this.level.tenseiWorldConfig.beaconLevelTwo;
+                    case 3 -> this.level.tenseiWorldConfig.beaconLevelThree;
+                    case 4 -> this.level.tenseiWorldConfig.beaconLevelFour;
+                    default -> this.levels * 10 + 10;
+                };
+            }
+            // TenseiMC end
             return this.levels * 10 + 10;
         } else {
             return effectRange;
